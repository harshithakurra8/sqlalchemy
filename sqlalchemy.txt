The Python SQL Toolkit and Object Relational Mapper:

SQLAlchemy is the Python SQL toolkit and Object Relational Mapper that gives application developers the full power and flexibility of SQL.

It provides a full suite of well known enterprise-level persistence patterns, designed for efficient and high-performing database access, adapted into a simple and Pythonic domain language.

-Python Library

-ORM

-Easy to use

-Support and documentation


to install  -  pip install SQLAlchemy


The SQLAlchemy SQL Toolkit and Object Relational Mapper is a comprehensive set of tools for working with databases and Python. It has several distinct areas of functionality which can be used individually or combined together. 

The SQL Expression Language is a toolkit on its own, independent of the ORM package, which provides a system of constructing SQL expressions represented by composable objects, which can then be “executed” against a target database within the scope of a specific transaction, returning a result set.

When pip is available, the distribution can be downloaded from PyPI and installed in one step:

pip install SQLAlchemy

In order to install the latest prerelease version, such as 2.0.0b1, pip requires that the --pre flag be used:

pip install --pre SQLAlchemy

Installing manually from the source distribution:

When not installing from pip, the source distribution may be installed using the setup.py script:

python setup.py install

Checking the Installed SQLAlchemy Version:

To check the version of SQLAlchemy we can use this promp:

import sqlalchemy
sqlalchemy.__version__  

we can get output or version like:

2.0.31

SQLAlchemy constructs used in these sections will be imported from the sqlalchemy namespaces.
 As an additional indicator of subject classification, they will also include a dark blue border on the right. 
 When using the ORM, these concepts are still in play but are less often explicit in user code.
ORM users should read these sections, but not expect to be using these APIs directly for ORM-centric code.


SQLAlchemy ORM builds upon the Core to provide optional object relational mapping capabilities.
 The ORM provides an additional configuration layer allowing user-defined Python classes 
to be mapped to database tables and other constructs, as well as an object persistence mechanism known as the Session.


